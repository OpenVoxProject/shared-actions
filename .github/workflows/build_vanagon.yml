name: Build an OpenVox vanagon project

on:
  workflow_call:
    inputs:
      ref:
        description: 'Tag to build'
        required: true
        type: string
      project_name:
        description: 'The vanagon project to build'
        required: true
        type: string
      platform_list:
        description: 'A comma-separated list of platforms to build for. Do not include spaces. If not provided, will use the default list of platforms supported by OpenVox.'
        required: false
        type: string

env:
  ENDPOINT_URL: ${{ secrets.S3_ENDPOINT_URL }}
  BUCKET_NAME: ${{ secrets.S3_ARTIFACTS_BUCKET_NAME }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  # https://github.com/boto/boto3/issues/4398#issuecomment-2619946229
  AWS_REQUEST_CHECKSUM_CALCULATION: "WHEN_REQUIRED"
  AWS_RESPONSE_CHECKSUM_VALIDATION: "WHEN_REQUIRED"

jobs:
  set-matrix:
    runs-on: ubuntu-24.04
    outputs:
      arm_matrix: ${{ steps.set-matrix.outputs.arm_matrix }}
      non_arm_matrix: ${{ steps.set-matrix.outputs.non_arm_matrix }}
    steps:
      - id: set-matrix
        run: |
          default_list=(
            'amazon-2-aarch64'
            'amazon-2023-aarch64'
            'amazon-2023-x86_64'
            'debian-10-amd64'
            'debian-11-aarch64'
            'debian-11-amd64'
            'debian-12-aarch64'
            'debian-12-amd64'
            'el-7-x86_64'
            'el-8-aarch64'
            'el-8-x86_64'
            'el-9-aarch64'
            'el-9-x86_64'
            'el-10-x86_64'
            'el-10-aarch64'
            'fedora-36-x86_64'
            'fedora-40-x86_64'
            'fedora-40-aarch64'
            'fedora-41-x86_64'
            'fedora-41-aarch64'
            'sles-15-x86_64'
            'ubuntu-18.04-aarch64'
            'ubuntu-18.04-amd64'
            'ubuntu-20.04-aarch64'
            'ubuntu-20.04-amd64'
            'ubuntu-22.04-aarch64'
            'ubuntu-22.04-amd64'
            'ubuntu-24.04-aarch64'
            'ubuntu-24.04-amd64'
          )
          if [[ -n "${{ inputs.platform_list }}" ]]; then
            IFS=',' read -r -a platforms <<< "${{ inputs.platform_list }}"
          else
            platforms=("${default_list[@]}")
          fi

          arm_platforms=()
          non_arm_platforms=()
          for platform in "${platforms[@]}"; do
            if [[ "$platform" == *-aarch64 || "platform" == *-arm64 ]]; then
              arm_platforms+=("$platform")
            else
              non_arm_platforms+=("$platform")
            fi
          done
          echo "arm_matrix=$(jq --monochrome-output --compact-output --null-input '$ARGS.positional' --args -- ${arm_platforms[@]})" >> "${GITHUB_OUTPUT}"
          echo "non_arm_matrix=$(jq --monochrome-output --compact-output --null-input '$ARGS.positional' --args -- ${non_arm_platforms[@]})" >> "${GITHUB_OUTPUT}"

  build_arm:
    needs: set-matrix
    runs-on: ubuntu-24.04-arm
    timeout-minutes: 600
    if: needs.set-matrix.outputs.arm_matrix != '[""]'
    strategy:
      fail-fast: false
      matrix:
        platform: ${{ fromJSON(needs.set-matrix.outputs.arm_matrix) }}
    steps:
      - name: Checkout code at tag
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref }}

      - name: Install Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2.7'
          bundler-cache: true

      - name: Update awscli
        run: |
          python -m pip install --upgrade awscli

      - name: Run build script
        run: |
          rm -rf output
          bundle exec rake vox:build['${{ inputs.project_name }}','${{ matrix.platform }}']

      - name: Upload output to S3
        run: |
          bundle exec rake vox:upload['${{ inputs.ref }}','${{ matrix.platform }}']
  
  build_non_arm:
    needs: set-matrix
    runs-on: ubuntu-24.04
    timeout-minutes: 600
    if: needs.set-matrix.outputs.non_arm_matrix != '[""]'
    strategy:
      fail-fast: false
      matrix:
        platform: ${{ fromJSON(needs.set-matrix.outputs.non_arm_matrix) }}
    steps:
      - name: Checkout code at tag
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref }}

      - name: Install Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2.6'
          bundler-cache: true

      - name: Install qemu-user-static
        run: |
          sudo apt-get update -y
          sudo apt-get install -y qemu-user-static

      - name: Update awscli
        run: |
          python -m pip install --upgrade awscli

      - name: Run build script
        run: |
          rm -rf output
          bundle exec rake vox:build['${{ inputs.project_name }}','${{ matrix.platform }}']

      - name: Upload output to S3
        run: |
          bundle exec rake vox:upload['${{ inputs.ref }}','${{ matrix.platform }}']
